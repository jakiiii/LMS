[dir=rtl] .irs {
  position: relative;
  display: block;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  font-size: 11px;
  font-family: Arial, sans-serif;
}
[dir=rtl] .irs-line {
  position: relative;
  display: block;
  overflow: hidden;
  outline: none !important;
}
[dir=rtl] .irs-bar {
  position: absolute;
  display: block;
  right: 0;
  width: 0;
}
[dir=rtl] .irs-shadow {
  position: absolute;
  display: none;
  right: 0;
  width: 0;
}
[dir=rtl] .irs-handle {
  position: absolute;
  display: block;
  box-sizing: border-box;
  cursor: default;
  z-index: 1;
}
[dir=rtl] .irs-handle.type_last {
  z-index: 2;
}
[dir=rtl] .irs-min, [dir=rtl] .irs-max {
  position: absolute;
  display: block;
  cursor: default;
}
[dir=rtl] .irs-min {
  right: 0;
}
[dir=rtl] .irs-max {
  left: 0;
}
[dir=rtl] .irs-from, [dir=rtl] .irs-to, [dir=rtl] .irs-single {
  position: absolute;
  display: block;
  top: 0;
  right: 0;
  cursor: default;
  white-space: nowrap;
}
[dir=rtl] .irs-grid {
  position: absolute;
  display: none;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 20px;
}
[dir=rtl] .irs-with-grid .irs-grid {
  display: block;
}
[dir=rtl] .irs-grid-pol {
  position: absolute;
  top: 0;
  right: 0;
  width: 1px;
  height: 8px;
  background: #000;
}
[dir=rtl] .irs-grid-pol.small {
  height: 4px;
}
[dir=rtl] .irs-grid-text {
  position: absolute;
  bottom: 0;
  right: 0;
  white-space: nowrap;
  text-align: center;
  font-size: 9px;
  line-height: 9px;
  padding: 0 3px;
  color: #000;
}
[dir=rtl] .irs-disable-mask {
  position: absolute;
  display: block;
  top: 0;
  right: -1%;
  width: 102%;
  height: 100%;
  cursor: default;
  background: rgba(0, 0, 0, 0);
  z-index: 2;
}
[dir=rtl] .lt-ie9 .irs-disable-mask {
  background: #000;
  filter: alpha(opacity=0);
  cursor: not-allowed;
}
[dir=rtl] .irs-disabled {
  opacity: 0.4;
}
[dir=rtl] .irs-hidden-input {
  position: absolute !important;
  display: block !important;
  top: 0 !important;
  right: 0 !important;
  width: 0 !important;
  height: 0 !important;
  font-size: 0 !important;
  line-height: 0 !important;
  padding: 0 !important;
  margin: 0 !important;
  overflow: hidden;
  outline: none !important;
  z-index: -9999 !important;
  background: none !important;
  border-style: solid !important;
  border-color: transparent !important;
}

[dir=rtl] .irs--flat {
  height: 40px;
}
[dir=rtl] .irs--flat.irs-with-grid {
  height: 60px;
}
[dir=rtl] .irs--flat .irs-line {
  top: 25px;
  height: 12px;
  background-color: #e0e4e9;
  border-radius: 0.25rem;
}
[dir=rtl] .irs--flat .irs-bar {
  top: 25px;
  height: 12px;
  background-color: #5567FF;
}
[dir=rtl] .irs--flat .irs-bar--single {
  border-radius: 0 0.25rem 0.25rem 0;
}
[dir=rtl] .irs--flat .irs-shadow {
  height: 1px;
  bottom: 16px;
  background-color: #e0e4e9;
}
[dir=rtl] .irs--flat .irs-handle {
  top: 22px;
  width: 16px;
  height: 18px;
  background-color: transparent;
}
[dir=rtl] .irs--flat .irs-handle > i:first-child {
  position: absolute;
  display: block;
  top: 0;
  right: 50%;
  width: 2px;
  height: 100%;
  margin-right: -1px;
  background-color: #3c50ff;
}
[dir=rtl] .irs--flat .irs-handle.state_hover > i:first-child, [dir=rtl] .irs--flat .irs-handle:hover > i:first-child {
  background-color: #2239ff;
}
[dir=rtl] .irs--flat .irs-min,
[dir=rtl] .irs--flat .irs-max {
  top: 0;
  padding: 1px 3px;
  color: #272C33;
  font-size: 10px;
  line-height: 1.333;
  text-shadow: none;
  background-color: #fff;
  border-radius: 0.25rem;
}
[dir=rtl] .irs--flat .irs-from,
[dir=rtl] .irs--flat .irs-to,
[dir=rtl] .irs--flat .irs-single {
  color: #fff;
  font-size: 11px;
  line-height: 1.333;
  text-shadow: none;
  padding: 1px 5px;
  background-color: #5567FF;
  border-radius: 0.25rem;
  font-weight: bold;
}
[dir=rtl] .irs--flat .irs-from:before,
[dir=rtl] .irs--flat .irs-to:before,
[dir=rtl] .irs--flat .irs-single:before {
  position: absolute;
  display: block;
  content: "";
  bottom: -6px;
  right: 50%;
  width: 0;
  height: 0;
  margin-right: -3px;
  overflow: hidden;
  border: 3px solid transparent;
  border-top-color: #5567FF;
}
[dir=rtl] .irs--flat .irs-grid-pol {
  background-color: #e1e4e9;
}
[dir=rtl] .irs--flat .irs-grid-text {
  color: #999;
}
/*# sourceMappingURL=data:application/json;base64, */