/*
 *  Usage:
 *
      <div class="sk-double-bounce">
        <div class="sk-child sk-double-bounce1"></div>
        <div class="sk-child sk-double-bounce2"></div>
      </div>
 *
 */
[dir=rtl] .sk-double-bounce {
  width: 40px;
  height: 40px;
  position: relative;
  margin: 40px auto;
}
[dir=rtl] .sk-double-bounce .sk-child {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #333;
  opacity: 0.6;
  position: absolute;
  top: 0;
  right: 0;
  -webkit-animation: sk-doubleBounce 2s infinite ease-in-out;
          animation: sk-doubleBounce 2s infinite ease-in-out;
}
[dir=rtl] .sk-double-bounce .sk-double-bounce2 {
  -webkit-animation-delay: -1s;
          animation-delay: -1s;
}

@-webkit-keyframes sk-doubleBounce {
  0%, 100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}

@keyframes sk-doubleBounce {
  0%, 100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}
[dir=rtl] .preloader {
  height: 100%;
  width: 100%;
  top: 0px;
  position: fixed;
  z-index: 99999;
  background: #5567FF;
  display: flex;
  align-items: center;
  justify-content: center;
}
[dir=rtl] .preloader .sk-child {
  background-color: #fff;
}
/*# sourceMappingURL=data:application/json;base64, */