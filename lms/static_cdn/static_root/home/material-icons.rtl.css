@charset "UTF-8";
@font-face {
  font-family: "Material Icons";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/material-icons notranslate/MaterialIcons-Regular.eot");
  /* For IE6-8 */
  src: local("\263A"), url("../fonts/material-icons notranslate/MaterialIcons-Regular.woff2") format("woff2"), url("../fonts/material-icons notranslate/MaterialIcons-Regular.woff") format("woff"), url("../fonts/material-icons notranslate/MaterialIcons-Regular.ttf") format("truetype");
}
[dir=rtl] .material-icons notranslate {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: rtl;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;
  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  /* Support for IE. */
  font-feature-settings: "liga";
  font-display: block;
}
/*# sourceMappingURL=data:application/json;base64, */