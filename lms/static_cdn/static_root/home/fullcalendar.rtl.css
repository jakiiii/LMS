@charset "UTF-8";
/*!
 * FullCalendar Style
 * Docs & License: http://arshaw.com/fullcalendar/
 * (c) 2013 Adam Shaw
 */
[dir=rtl] .fc {
  direction: rtl;
  text-align: right;
}

[dir=rtl] .fc-rtl {
  text-align: left;
}

[dir=rtl] body .fc {
  /* extra precedence to overcome jqui */
  font-size: 1rem;
}

/* Colors
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-unthemed th,
[dir=rtl] .fc-unthemed td,
[dir=rtl] .fc-unthemed thead,
[dir=rtl] .fc-unthemed tbody,
[dir=rtl] .fc-unthemed .fc-divider,
[dir=rtl] .fc-unthemed .fc-row,
[dir=rtl] .fc-unthemed .fc-popover {
  border-color: #E9EDF2;
}

[dir=rtl] .fc-unthemed .fc-popover {
  background-color: #fff;
}

[dir=rtl] .fc-unthemed .fc-divider,
[dir=rtl] .fc-unthemed .fc-popover .fc-header {
  background: #eee;
}

[dir=rtl] .fc-unthemed .fc-popover .fc-header .fc-close {
  color: #666;
}

[dir=rtl] .fc-unthemed .fc-today {
  background: #efefef;
}

[dir=rtl] .fc-highlight {
  /* when user is selecting cells */
  background: #bce8f1;
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
}

[dir=rtl] .fc-bgevent {
  /* default look for background events */
  background: #8fdf82;
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
}

[dir=rtl] .fc-nonbusiness {
  /* default look for non-business-hours areas */
  /* will inherit .fc-bgevent's styles */
  background: #d7d7d7;
}

/* Icons (inline elements with styled text that mock arrow icons)
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  line-height: 1em;
  font-size: 1em;
  text-align: center;
  overflow: hidden;
  font-family: "Courier New", Courier, monospace;
}

/*
Acceptable font-family overrides for individual icons:
	"Arial", sans-serif
	"Times New Roman", serif

NOTE: use percentage font sizes or else old IE chokes
*/
[dir=rtl] .fc-icon:after {
  position: relative;
  margin: 0 -1em;
  /* ensures character will be centered, regardless of width */
}

[dir=rtl] .fc-icon-left-single-arrow:after {
  content: "\2039";
  font-weight: bold;
  font-size: 200%;
  top: -7%;
  right: 3%;
}

[dir=rtl] .fc-icon-right-single-arrow:after {
  content: "\203A";
  font-weight: bold;
  font-size: 200%;
  top: -7%;
  right: -3%;
}

[dir=rtl] .fc-icon-left-double-arrow:after {
  content: "\AB";
  font-size: 160%;
  top: -7%;
}

[dir=rtl] .fc-icon-right-double-arrow:after {
  content: "\BB";
  font-size: 160%;
  top: -7%;
}

[dir=rtl] .fc-icon-left-triangle:after {
  content: "\25C4";
  font-size: 125%;
  top: 3%;
  right: -2%;
}

[dir=rtl] .fc-icon-right-triangle:after {
  content: "\25BA";
  font-size: 125%;
  top: 3%;
  right: 2%;
}

[dir=rtl] .fc-icon-down-triangle:after {
  content: "\25BC";
  font-size: 125%;
  top: 2%;
}

[dir=rtl] .fc-icon-x:after {
  content: "\D7";
  font-size: 200%;
  top: 6%;
}

/* Buttons (styled <button> tags, normalized to work cross-browser)
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc button {
  /* force height to include the border and padding */
  box-sizing: border-box;
  /* dimensions */
  margin: 0;
  height: 2.1em;
  padding: 0 0.6em;
  /* text & cursor */
  font-size: 1em;
  /* normalize */
  white-space: nowrap;
  cursor: pointer;
}

/* Firefox has an annoying inner border */
[dir=rtl] .fc button::-moz-focus-inner {
  margin: 0;
  padding: 0;
}

[dir=rtl] .fc-state-default {
  /* non-theme */
  border: 1px solid;
}

[dir=rtl] .fc-state-default.fc-corner-left {
  /* non-theme */
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}

[dir=rtl] .fc-state-default.fc-corner-right {
  /* non-theme */
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}

/* icons in buttons */
[dir=rtl] .fc button .fc-icon {
  /* non-theme */
  position: relative;
  top: -0.05em;
  /* seems to be a good adjustment across browsers */
  margin: 0 0.2em;
  vertical-align: middle;
}

/*
	button states
	borrowed from twitter bootstrap (http://twitter.github.com/bootstrap/)
*/
[dir=rtl] .fc-state-default {
  display: inline-block;
  font-weight: 600;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  border: 1px solid transparent;
  padding: 5px;
  background: #5567FF;
  color: #fff;
}
[dir=rtl] .fc-state-default:hover {
  background: #3c50ff;
}

/* Buttons Groups
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-button-group {
  display: inline-block;
}

/*
every button that is not first in a button group should scootch over one pixel and cover the
previous button's border...
*/
[dir=rtl] .fc .fc-button-group > * {
  /* extra precedence b/c buttons have margin set to zero */
  float: right;
  margin: 0 2px 0 0;
}

[dir=rtl] .fc .fc-button-group > :first-child {
  /* same */
  margin-right: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

[dir=rtl] .fc .fc-button-group > :last-child {
  /* same */
  margin-right: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

/* Popover
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-popover {
  position: absolute;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
}

[dir=rtl] .fc-popover .fc-header {
  /* TODO: be more consistent with fc-head/fc-body */
  padding: 2px 4px;
}

[dir=rtl] .fc-popover .fc-header .fc-title {
  margin: 0 2px;
}

[dir=rtl] .fc-popover .fc-header .fc-close {
  cursor: pointer;
}

[dir=rtl] .fc-ltr .fc-popover .fc-header .fc-title,
[dir=rtl] .fc-rtl .fc-popover .fc-header .fc-close {
  float: right;
}

[dir=rtl] .fc-rtl .fc-popover .fc-header .fc-title,
[dir=rtl] .fc-ltr .fc-popover .fc-header .fc-close {
  float: left;
}

/* unthemed */
[dir=rtl] .fc-unthemed .fc-popover {
  border-width: 1px;
  border-style: solid;
}

[dir=rtl] .fc-unthemed .fc-popover .fc-header .fc-close {
  font-size: 0.9em;
  margin-top: 2px;
}

/* jqui themed */
[dir=rtl] .fc-popover > .ui-widget-header + .ui-widget-content {
  border-top: 0;
  /* where they meet, let the header have the border */
}

/* Misc Reusable Components
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-divider {
  border-style: solid;
  border-width: 1px;
}

[dir=rtl] hr.fc-divider {
  height: 0;
  margin: 0;
  padding: 0 0 2px;
  /* height is unreliable across browsers, so use padding */
  border-width: 1px 0;
}

[dir=rtl] .fc-clear {
  clear: both;
}

[dir=rtl] .fc-bg,
[dir=rtl] .fc-bgevent-skeleton,
[dir=rtl] .fc-highlight-skeleton,
[dir=rtl] .fc-helper-skeleton {
  /* these element should always cling to top-left/right corners */
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
}

[dir=rtl] .fc-bg {
  bottom: 0;
  /* strech bg to bottom edge */
}

[dir=rtl] .fc-bg table {
  height: 100%;
  /* strech bg to bottom edge */
}

/* Tables
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc table {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 1em;
  /* normalize cross-browser */
  border: none;
}

[dir=rtl] .fc th {
  text-align: center;
}

[dir=rtl] .fc th,
[dir=rtl] .fc td {
  border-style: solid;
  border-width: 1px;
  padding: 0;
  vertical-align: top;
}

[dir=rtl] .fc td.fc-today {
  border-style: double;
  /* overcome neighboring borders */
}

/* Fake Table Rows
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc .fc-row {
  /* extra precedence to overcome themes w/ .ui-widget-content forcing a 1px border */
  /* no visible border by default. but make available if need be (scrollbar width compensation) */
  border-style: solid;
  border-width: 0;
}

[dir=rtl] .fc-row table {
  /* don't put left/right border on anything within a fake row.
  	 the outer tbody will worry about this */
  border-right: 0 hidden transparent;
  border-left: 0 hidden transparent;
  /* no bottom borders on rows */
  border-bottom: 0 hidden transparent;
}

[dir=rtl] .fc-row:first-child table {
  border-top: 0 hidden transparent;
  /* no top border on first row */
}

/* Day Row (used within the header and the DayGrid)
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-row {
  position: relative;
}

[dir=rtl] .fc-row .fc-bg {
  z-index: 1;
}

/* highlighting cells & background event skeleton */
[dir=rtl] .fc-row .fc-bgevent-skeleton,
[dir=rtl] .fc-row .fc-highlight-skeleton {
  bottom: 0;
  /* stretch skeleton to bottom of row */
}

[dir=rtl] .fc-row .fc-bgevent-skeleton table,
[dir=rtl] .fc-row .fc-highlight-skeleton table {
  height: 100%;
  /* stretch skeleton to bottom of row */
}

[dir=rtl] .fc-row .fc-highlight-skeleton td,
[dir=rtl] .fc-row .fc-bgevent-skeleton td {
  border-color: transparent;
}

[dir=rtl] .fc-row .fc-bgevent-skeleton {
  z-index: 2;
}

[dir=rtl] .fc-row .fc-highlight-skeleton {
  z-index: 3;
}

/*
row content (which contains day/week numbers and events) as well as "helper" (which contains
temporary rendered events).
*/
[dir=rtl] .fc-row .fc-content-skeleton {
  position: relative;
  z-index: 4;
  padding-bottom: 2px;
  /* matches the space above the events */
}

[dir=rtl] .fc-row .fc-helper-skeleton {
  z-index: 5;
}

[dir=rtl] .fc-row .fc-content-skeleton td,
[dir=rtl] .fc-row .fc-helper-skeleton td {
  /* see-through to the background below */
  background: none;
  /* in case <td>s are globally styled */
  border-color: transparent;
  /* don't put a border between events and/or the day number */
  border-bottom: 0;
}

[dir=rtl] .fc-row .fc-content-skeleton tbody td,
[dir=rtl] .fc-row .fc-helper-skeleton tbody td {
  /* don't put a border between event cells */
  border-top: 0;
}

/* Scrolling Container
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-scroller {
  /* this class goes on elements for guaranteed vertical scrollbars */
  overflow-y: scroll;
  overflow-x: hidden;
}

[dir=rtl] .fc-scroller > * {
  /* we expect an immediate inner element */
  position: relative;
  /* re-scope all positions */
  width: 100%;
  /* hack to force re-sizing this inner element when scrollbars appear/disappear */
  overflow: hidden;
  /* don't let negative margins or absolute positioning create further scroll */
}

/* Global Event Styles
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-event {
  position: relative;
  /* for resize handle and other inner positioning */
  display: block;
  /* make the <a> tag block */
  font-size: 0.85em;
  line-height: 1.3;
  border-radius: 3px;
  padding: 2px;
  background-color: #5567FF;
  /* default BACKGROUND color */
  font-weight: normal;
  /* undo jqui's ui-widget-header bold */
}

/* overpower some of bootstrap's and jqui's styles on <a> tags */
[dir=rtl] .fc-event,
[dir=rtl] .fc-event:hover,
[dir=rtl] .ui-widget .fc-event {
  color: #fff;
  /* default TEXT color */
  text-decoration: none;
  /* if <a> has an href */
}

[dir=rtl] .fc-event[href],
[dir=rtl] .fc-event.fc-draggable {
  cursor: pointer;
  /* give events with links and draggable events a hand mouse pointer */
}

[dir=rtl] .fc-not-allowed,
[dir=rtl] .fc-not-allowed .fc-event {
  /* to override an event's custom cursor */
  cursor: not-allowed;
}

[dir=rtl] .fc-event .fc-bg {
  /* the generic .fc-bg already does position */
  z-index: 1;
  background: #fff;
  opacity: 0.25;
  filter: alpha(opacity=25);
  /* for IE */
}

[dir=rtl] .fc-event .fc-content {
  position: relative;
  z-index: 2;
}

[dir=rtl] .fc-event .fc-resizer {
  position: absolute;
  z-index: 3;
}

/* Horizontal Events
--------------------------------------------------------------------------------------------------*/
/* events that are continuing to/from another week. kill rounded corners and butt up against edge */
[dir=rtl] .fc-ltr .fc-h-event.fc-not-start,
[dir=rtl] .fc-rtl .fc-h-event.fc-not-end {
  margin-right: 0;
  border-right-width: 0;
  border-right-width: 3px;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

[dir=rtl] .fc-ltr .fc-h-event.fc-not-end,
[dir=rtl] .fc-rtl .fc-h-event.fc-not-start {
  margin-left: 0;
  border-left-width: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

/* resizer */
[dir=rtl] .fc-h-event .fc-resizer {
  /* positioned it to overcome the event's borders */
  top: -1px;
  bottom: -1px;
  right: -1px;
  left: -1px;
  width: 5px;
}

/* left resizer  */
[dir=rtl] .fc-ltr .fc-h-event .fc-start-resizer,
[dir=rtl] .fc-ltr .fc-h-event .fc-start-resizer:before,
[dir=rtl] .fc-ltr .fc-h-event .fc-start-resizer:after,
[dir=rtl] .fc-rtl .fc-h-event .fc-end-resizer,
[dir=rtl] .fc-rtl .fc-h-event .fc-end-resizer:before,
[dir=rtl] .fc-rtl .fc-h-event .fc-end-resizer:after {
  left: auto;
  /* ignore the right and only use the left */
  cursor: w-resize;
}

/* right resizer */
[dir=rtl] .fc-ltr .fc-h-event .fc-end-resizer,
[dir=rtl] .fc-ltr .fc-h-event .fc-end-resizer:before,
[dir=rtl] .fc-ltr .fc-h-event .fc-end-resizer:after,
[dir=rtl] .fc-rtl .fc-h-event .fc-start-resizer,
[dir=rtl] .fc-rtl .fc-h-event .fc-start-resizer:before,
[dir=rtl] .fc-rtl .fc-h-event .fc-start-resizer:after {
  right: auto;
  /* ignore the left and only use the right */
  cursor: e-resize;
}

/* DayGrid events
----------------------------------------------------------------------------------------------------
We use the full "fc-day-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/
[dir=rtl] .fc-day-grid-event {
  margin: 4px 5px 0;
  /* spacing between events and edges */
  padding: 0 3px;
}

[dir=rtl] .fc-day-grid-event .fc-content {
  /* force events to be one-line tall */
  white-space: nowrap;
  overflow: hidden;
}

[dir=rtl] .fc-day-grid-event .fc-time {
  font-weight: bold;
}

[dir=rtl] .fc-day-grid-event .fc-resizer {
  /* enlarge the default hit area */
  right: -3px;
  left: -3px;
  width: 7px;
}

/* Event Limiting
--------------------------------------------------------------------------------------------------*/
/* "more" link that represents hidden events */
[dir=rtl] a.fc-more {
  font-size: 0.85em;
  cursor: pointer;
  text-decoration: none;
}

[dir=rtl] a.fc-more:hover {
  text-decoration: underline;
}

[dir=rtl] .fc-limited {
  /* rows and cells that are hidden because of a "more" link */
  display: none;
}

/* popover that appears when "more" link is clicked */
[dir=rtl] .fc-day-grid .fc-row {
  z-index: 1;
  /* make the "more" popover one higher than this */
}

[dir=rtl] .fc-more-popover {
  z-index: 2;
  width: 220px;
}

[dir=rtl] .fc-more-popover .fc-event-container {
  padding: 10px;
}

/* Toolbar
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-toolbar {
  text-align: center;
  padding-bottom: 0.5rem;
}

[dir=rtl] .fc-toolbar .fc-left {
  float: right;
}

[dir=rtl] .fc-toolbar .fc-right {
  float: left;
}

[dir=rtl] .fc-toolbar .fc-center {
  display: inline-block;
}

/* the things within each left/right/center section */
[dir=rtl] .fc .fc-toolbar > * > * {
  /* extra precedence to override button border margins */
  float: right;
  margin-right: 0.75em;
}

/* the first thing within each left/center/right section */
[dir=rtl] .fc .fc-toolbar > * > :first-child {
  /* extra precedence to override button border margins */
  margin-right: 0;
}

/* title text */
[dir=rtl] .fc-toolbar h2 {
  font-size: 24px;
  color: #5567FF;
  margin: 5px 0;
}

/* button layering (for border precedence) */
[dir=rtl] .fc-toolbar button {
  position: relative;
}

[dir=rtl] .fc-toolbar .fc-state-hover,
[dir=rtl] .fc-toolbar .ui-state-hover {
  z-index: 2;
}

[dir=rtl] .fc-toolbar .fc-state-down {
  z-index: 3;
}

[dir=rtl] .fc-toolbar .fc-state-active,
[dir=rtl] .fc-toolbar .ui-state-active {
  z-index: 4;
}

[dir=rtl] .fc-toolbar button:focus {
  z-index: 5;
}

/* View Structure
--------------------------------------------------------------------------------------------------*/
/* undo twitter bootstrap's box-sizing rules. normalizes positioning techniques */
/* don't do this for the toolbar because we'll want bootstrap to style those buttons as some pt */
[dir=rtl] .fc-view-container {
  position: relative;
  display: block;
  margin-bottom: 1rem;
  background-color: #fff;
  border: 1px solid #DFE2E6;
  background: #fff;
  box-shadow: 0px 3px 5px #e2e2e2;
  border: 0;
}

[dir=rtl] .fc-view-container *,
[dir=rtl] .fc-view-container *:before,
[dir=rtl] .fc-view-container *:after {
  box-sizing: content-box;
}

[dir=rtl] .fc-view,
[dir=rtl] .fc-view > table {
  /* so dragged elements can be above the view's main element */
  position: relative;
  z-index: 0;
}

/* BasicView
--------------------------------------------------------------------------------------------------*/
/* day row structure */
[dir=rtl] .fc-basicWeek-view .fc-content-skeleton,
[dir=rtl] .fc-basicDay-view .fc-content-skeleton {
  /* we are sure there are no day numbers in these views, so... */
  padding-top: 1px;
  /* add a pixel to make sure there are 2px padding above events */
  padding-bottom: 1em;
  /* ensure a space at bottom of cell for user selecting/clicking */
}

[dir=rtl] .fc-basic-view .fc-body .fc-row {
  min-height: 4em;
  /* ensure that all rows are at least this tall */
}

/* a "rigid" row will take up a constant amount of height because content-skeleton is absolute */
[dir=rtl] .fc-row.fc-rigid {
  overflow: hidden;
}

[dir=rtl] .fc-row.fc-rigid .fc-content-skeleton {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
}

/* week and day number styling */
[dir=rtl] .fc-basic-view .fc-week-number,
[dir=rtl] .fc-basic-view .fc-day-number {
  padding: 0 6px;
  font-size: 14px;
}

[dir=rtl] .fc-basic-view td.fc-week-number span,
[dir=rtl] .fc-basic-view td.fc-day-number {
  padding-top: 2px;
  padding-bottom: 2px;
}

[dir=rtl] .fc-basic-view .fc-week-number {
  text-align: center;
}

[dir=rtl] .fc-basic-view .fc-week-number span {
  /* work around the way we do column resizing and ensure a minimum width */
  display: inline-block;
  min-width: 1.25em;
}

[dir=rtl] .fc-ltr .fc-basic-view .fc-day-number {
  text-align: left;
}

[dir=rtl] .fc-rtl .fc-basic-view .fc-day-number {
  text-align: right;
}

[dir=rtl] .fc-day-number.fc-other-month {
  opacity: 0.3;
  filter: alpha(opacity=30);
  /* for IE */
  /* opacity with small font can sometimes look too faded
  	 might want to set the 'color' property instead
  	 making day-numbers bold also fixes the problem */
}

/* AgendaView all-day area
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-agenda-view .fc-day-grid {
  position: relative;
  z-index: 2;
  /* so the "more.." popover will be over the time grid */
}

[dir=rtl] .fc-agenda-view .fc-day-grid .fc-row {
  min-height: 3em;
  /* all-day section will never get shorter than this */
}

[dir=rtl] .fc-agenda-view .fc-day-grid .fc-row .fc-content-skeleton {
  padding-top: 1px;
  /* add a pixel to make sure there are 2px padding above events */
  padding-bottom: 1em;
  /* give space underneath events for clicking/selecting days */
}

/* TimeGrid axis running down the side (for both the all-day area and the slot area)
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc .fc-axis {
  /* .fc to overcome default cell styles */
  vertical-align: middle;
  padding: 0 4px;
  white-space: nowrap;
}

[dir=rtl] .fc-ltr .fc-axis {
  text-align: left;
}

[dir=rtl] .fc-rtl .fc-axis {
  text-align: right;
}

[dir=rtl] .ui-widget td.fc-axis {
  font-weight: normal;
  /* overcome jqui theme making it bold */
}

/* TimeGrid Structure
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-time-grid-container,
[dir=rtl] .fc-time-grid {
  /* so slats/bg/content/etc positions get scoped within here */
  position: relative;
  z-index: 1;
}

[dir=rtl] .fc-time-grid {
  min-height: 100%;
  /* so if height setting is 'auto', .fc-bg stretches to fill height */
}

[dir=rtl] .fc-time-grid table {
  /* don't put outer borders on slats/bg/content/etc */
  border: 0 hidden transparent;
}

[dir=rtl] .fc-time-grid > .fc-bg {
  z-index: 1;
}

[dir=rtl] .fc-time-grid .fc-slats,
[dir=rtl] .fc-time-grid > hr {
  /* the <hr> AgendaView injects when grid is shorter than scroller */
  position: relative;
  z-index: 2;
}

[dir=rtl] .fc-time-grid .fc-bgevent-skeleton,
[dir=rtl] .fc-time-grid .fc-content-skeleton {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
}

[dir=rtl] .fc-time-grid .fc-bgevent-skeleton {
  z-index: 3;
}

[dir=rtl] .fc-time-grid .fc-highlight-skeleton {
  z-index: 4;
}

[dir=rtl] .fc-time-grid .fc-content-skeleton {
  z-index: 5;
}

[dir=rtl] .fc-time-grid .fc-helper-skeleton {
  z-index: 6;
}

/* TimeGrid Slats (lines that run horizontally)
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-time-grid .fc-slats td {
  height: 1.5em;
  border-bottom: 0;
  /* each cell is responsible for its top border */
}

[dir=rtl] .fc-time-grid .fc-slats .fc-minor td {
  border-top-style: dotted;
}

[dir=rtl] .fc-time-grid .fc-slats .ui-widget-content {
  /* for jqui theme */
  background: none;
  /* see through to fc-bg */
}

/* TimeGrid Highlighting Slots
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-time-grid .fc-highlight-container {
  /* a div within a cell within the fc-highlight-skeleton */
  position: relative;
  /* scopes the left/right of the fc-highlight to be in the column */
}

[dir=rtl] .fc-time-grid .fc-highlight {
  position: absolute;
  right: 0;
  left: 0;
  /* top and bottom will be in by JS */
}

/* TimeGrid Event Containment
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-time-grid .fc-event-container,
[dir=rtl] .fc-time-grid .fc-bgevent-container {
  /* a div within a cell within the fc-bgevent-skeleton */
  position: relative;
}

[dir=rtl] .fc-ltr .fc-time-grid .fc-event-container {
  /* space on the sides of events for LTR (default) */
  margin: 0 2px 0 2.5%;
}

[dir=rtl] .fc-rtl .fc-time-grid .fc-event-container {
  /* space on the sides of events for RTL */
  margin: 0 2.5% 0 2px;
}

[dir=rtl] .fc-time-grid .fc-event,
[dir=rtl] .fc-time-grid .fc-bgevent {
  position: absolute;
  z-index: 1;
  /* scope inner z-index's */
}

[dir=rtl] .fc-time-grid .fc-bgevent {
  /* background events always span full width */
  right: 0;
  left: 0;
}

/* Generic Vertical Event
--------------------------------------------------------------------------------------------------*/
[dir=rtl] .fc-v-event.fc-not-start {
  /* events that are continuing from another day */
  /* replace space made by the top border with padding */
  border-top-width: 0;
  padding-top: 1px;
  /* remove top rounded corners */
  border-top-right-radius: 0;
  border-top-left-radius: 0;
}

[dir=rtl] .fc-v-event.fc-not-end {
  /* replace space made by the top border with padding */
  border-bottom-width: 0;
  padding-bottom: 1px;
  /* remove bottom rounded corners */
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

/* TimeGrid Event Styling
----------------------------------------------------------------------------------------------------
We use the full "fc-time-grid-event" class instead of using descendants because the event won't
be a descendant of the grid when it is being dragged.
*/
[dir=rtl] .fc-time-grid-event {
  overflow: hidden;
  /* don't let the bg flow over rounded corners */
}

[dir=rtl] .fc-time-grid-event .fc-time,
[dir=rtl] .fc-time-grid-event .fc-title {
  padding: 0 1px;
}

[dir=rtl] .fc-time-grid-event .fc-time {
  font-size: 0.625rem;
  white-space: nowrap;
}

/* short mode, where time and title are on the same line */
[dir=rtl] .fc-time-grid-event.fc-short .fc-content {
  /* don't wrap to second line (now that contents will be inline) */
  white-space: nowrap;
}

[dir=rtl] .fc-time-grid-event.fc-short .fc-time,
[dir=rtl] .fc-time-grid-event.fc-short .fc-title {
  /* put the time and title on the same line */
  display: inline-block;
  vertical-align: top;
}

[dir=rtl] .fc-time-grid-event.fc-short .fc-time span {
  display: none;
  /* don't display the full time text... */
}

[dir=rtl] .fc-time-grid-event.fc-short .fc-time:before {
  content: attr(data-start);
  /* ...instead, display only the start time */
}

[dir=rtl] .fc-time-grid-event.fc-short .fc-time:after {
  content: "\A0-\A0";
  /* seperate with a dash, wrapped in nbsp's */
}

[dir=rtl] .fc-time-grid-event.fc-short .fc-title {
  font-size: 0.85em;
  /* make the title text the same size as the time */
  padding: 0;
  /* undo padding from above */
}

/* resizer */
[dir=rtl] .fc-time-grid-event .fc-resizer {
  right: 0;
  left: 0;
  bottom: 0;
  height: 8px;
  overflow: hidden;
  line-height: 8px;
  font-size: 11px;
  font-family: monospace;
  text-align: center;
  cursor: s-resize;
}

[dir=rtl] .fc-time-grid-event .fc-resizer:after {
  content: "=";
}

[dir=rtl] #loading {
  display: none;
  position: absolute;
  top: 10px;
  left: 10px;
}
/*# sourceMappingURL=data:application/json;base64, */